<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangyueche.mybatis.ShareOrderMapper" >
  <resultMap id="BaseResultMap" type="com.wangyueche.bean.entity.ShareOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="INTEGER" />
    <result column="route_id" property="routeId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="book_depart_time" property="bookDepartTime" jdbcType="BIGINT" />
    <result column="departure" property="departure" jdbcType="VARCHAR" />
    <result column="dep_longitude" property="depLongitude" jdbcType="DOUBLE" />
    <result column="dep_latitude" property="depLatitude" jdbcType="DOUBLE" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="dest_longitude" property="destLongitude" jdbcType="DOUBLE" />
    <result column="dest_latitude" property="destLatitude" jdbcType="DOUBLE" />
    <result column="encrypt" property="encrypt" jdbcType="INTEGER" />
    <result column="order_ensure_time" property="orderEnsureTime" jdbcType="BIGINT" />
    <result column="passenger_num" property="passengerNum" jdbcType="INTEGER" />
    <result column="passenger_note" property="passengerNote" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, address, route_id, order_id, book_depart_time, departure, dep_longitude, 
    dep_latitude, destination, dest_longitude, dest_latitude, encrypt, order_ensure_time, 
    passenger_num, passenger_note
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wangyueche.bean.entity.ShareOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from share_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from share_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from share_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wangyueche.bean.entity.ShareOrderExample" >
    delete from share_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wangyueche.bean.entity.ShareOrder" >
    insert into share_order (id, company_id, address, 
      route_id, order_id, book_depart_time, 
      departure, dep_longitude, dep_latitude, 
      destination, dest_longitude, dest_latitude, 
      encrypt, order_ensure_time, passenger_num, 
      passenger_note)
    values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=VARCHAR}, #{address,jdbcType=INTEGER}, 
      #{routeId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{bookDepartTime,jdbcType=BIGINT}, 
      #{departure,jdbcType=VARCHAR}, #{depLongitude,jdbcType=DOUBLE}, #{depLatitude,jdbcType=DOUBLE}, 
      #{destination,jdbcType=VARCHAR}, #{destLongitude,jdbcType=DOUBLE}, #{destLatitude,jdbcType=DOUBLE}, 
      #{encrypt,jdbcType=INTEGER}, #{orderEnsureTime,jdbcType=BIGINT}, #{passengerNum,jdbcType=INTEGER}, 
      #{passengerNote,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wangyueche.bean.entity.ShareOrder" >
    insert into share_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="routeId != null" >
        route_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="bookDepartTime != null" >
        book_depart_time,
      </if>
      <if test="departure != null" >
        departure,
      </if>
      <if test="depLongitude != null" >
        dep_longitude,
      </if>
      <if test="depLatitude != null" >
        dep_latitude,
      </if>
      <if test="destination != null" >
        destination,
      </if>
      <if test="destLongitude != null" >
        dest_longitude,
      </if>
      <if test="destLatitude != null" >
        dest_latitude,
      </if>
      <if test="encrypt != null" >
        encrypt,
      </if>
      <if test="orderEnsureTime != null" >
        order_ensure_time,
      </if>
      <if test="passengerNum != null" >
        passenger_num,
      </if>
      <if test="passengerNote != null" >
        passenger_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=INTEGER},
      </if>
      <if test="routeId != null" >
        #{routeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="bookDepartTime != null" >
        #{bookDepartTime,jdbcType=BIGINT},
      </if>
      <if test="departure != null" >
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="depLongitude != null" >
        #{depLongitude,jdbcType=DOUBLE},
      </if>
      <if test="depLatitude != null" >
        #{depLatitude,jdbcType=DOUBLE},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="destLongitude != null" >
        #{destLongitude,jdbcType=DOUBLE},
      </if>
      <if test="destLatitude != null" >
        #{destLatitude,jdbcType=DOUBLE},
      </if>
      <if test="encrypt != null" >
        #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="orderEnsureTime != null" >
        #{orderEnsureTime,jdbcType=BIGINT},
      </if>
      <if test="passengerNum != null" >
        #{passengerNum,jdbcType=INTEGER},
      </if>
      <if test="passengerNote != null" >
        #{passengerNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wangyueche.bean.entity.ShareOrderExample" resultType="java.lang.Integer" >
    select count(*) from share_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update share_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=INTEGER},
      </if>
      <if test="record.routeId != null" >
        route_id = #{record.routeId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.bookDepartTime != null" >
        book_depart_time = #{record.bookDepartTime,jdbcType=BIGINT},
      </if>
      <if test="record.departure != null" >
        departure = #{record.departure,jdbcType=VARCHAR},
      </if>
      <if test="record.depLongitude != null" >
        dep_longitude = #{record.depLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.depLatitude != null" >
        dep_latitude = #{record.depLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.destLongitude != null" >
        dest_longitude = #{record.destLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.destLatitude != null" >
        dest_latitude = #{record.destLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.encrypt != null" >
        encrypt = #{record.encrypt,jdbcType=INTEGER},
      </if>
      <if test="record.orderEnsureTime != null" >
        order_ensure_time = #{record.orderEnsureTime,jdbcType=BIGINT},
      </if>
      <if test="record.passengerNum != null" >
        passenger_num = #{record.passengerNum,jdbcType=INTEGER},
      </if>
      <if test="record.passengerNote != null" >
        passenger_note = #{record.passengerNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update share_order
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=INTEGER},
      route_id = #{record.routeId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      book_depart_time = #{record.bookDepartTime,jdbcType=BIGINT},
      departure = #{record.departure,jdbcType=VARCHAR},
      dep_longitude = #{record.depLongitude,jdbcType=DOUBLE},
      dep_latitude = #{record.depLatitude,jdbcType=DOUBLE},
      destination = #{record.destination,jdbcType=VARCHAR},
      dest_longitude = #{record.destLongitude,jdbcType=DOUBLE},
      dest_latitude = #{record.destLatitude,jdbcType=DOUBLE},
      encrypt = #{record.encrypt,jdbcType=INTEGER},
      order_ensure_time = #{record.orderEnsureTime,jdbcType=BIGINT},
      passenger_num = #{record.passengerNum,jdbcType=INTEGER},
      passenger_note = #{record.passengerNote,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangyueche.bean.entity.ShareOrder" >
    update share_order
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=INTEGER},
      </if>
      <if test="routeId != null" >
        route_id = #{routeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="bookDepartTime != null" >
        book_depart_time = #{bookDepartTime,jdbcType=BIGINT},
      </if>
      <if test="departure != null" >
        departure = #{departure,jdbcType=VARCHAR},
      </if>
      <if test="depLongitude != null" >
        dep_longitude = #{depLongitude,jdbcType=DOUBLE},
      </if>
      <if test="depLatitude != null" >
        dep_latitude = #{depLatitude,jdbcType=DOUBLE},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="destLongitude != null" >
        dest_longitude = #{destLongitude,jdbcType=DOUBLE},
      </if>
      <if test="destLatitude != null" >
        dest_latitude = #{destLatitude,jdbcType=DOUBLE},
      </if>
      <if test="encrypt != null" >
        encrypt = #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="orderEnsureTime != null" >
        order_ensure_time = #{orderEnsureTime,jdbcType=BIGINT},
      </if>
      <if test="passengerNum != null" >
        passenger_num = #{passengerNum,jdbcType=INTEGER},
      </if>
      <if test="passengerNote != null" >
        passenger_note = #{passengerNote,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangyueche.bean.entity.ShareOrder" >
    update share_order
    set company_id = #{companyId,jdbcType=VARCHAR},
      address = #{address,jdbcType=INTEGER},
      route_id = #{routeId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      book_depart_time = #{bookDepartTime,jdbcType=BIGINT},
      departure = #{departure,jdbcType=VARCHAR},
      dep_longitude = #{depLongitude,jdbcType=DOUBLE},
      dep_latitude = #{depLatitude,jdbcType=DOUBLE},
      destination = #{destination,jdbcType=VARCHAR},
      dest_longitude = #{destLongitude,jdbcType=DOUBLE},
      dest_latitude = #{destLatitude,jdbcType=DOUBLE},
      encrypt = #{encrypt,jdbcType=INTEGER},
      order_ensure_time = #{orderEnsureTime,jdbcType=BIGINT},
      passenger_num = #{passengerNum,jdbcType=INTEGER},
      passenger_note = #{passengerNote,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>