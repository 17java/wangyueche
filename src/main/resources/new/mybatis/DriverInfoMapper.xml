<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangyueche.mapper.DriverInfoMapper" >
  <resultMap id="BaseResultMap" type="com.wangyueche.bean.entity.DriverInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="INTEGER" />
    <result column="driver_name" property="driverName" jdbcType="VARCHAR" />
    <result column="driver_phone" property="driverPhone" jdbcType="VARCHAR" />
    <result column="driver_gender" property="driverGender" jdbcType="VARCHAR" />
    <result column="driver_birthday" property="driverBirthday" jdbcType="INTEGER" />
    <result column="driver_nationality" property="driverNationality" jdbcType="VARCHAR" />
    <result column="driver_nation" property="driverNation" jdbcType="VARCHAR" />
    <result column="driver_marital_status" property="driverMaritalStatus" jdbcType="VARCHAR" />
    <result column="driver_language_level" property="driverLanguageLevel" jdbcType="VARCHAR" />
    <result column="driver_education" property="driverEducation" jdbcType="VARCHAR" />
    <result column="driver_census" property="driverCensus" jdbcType="VARCHAR" />
    <result column="driver_address" property="driverAddress" jdbcType="VARCHAR" />
    <result column="driver_contact_address" property="driverContactAddress" jdbcType="VARCHAR" />
    <result column="photo_id" property="photoId" jdbcType="VARCHAR" />
    <result column="license_id" property="licenseId" jdbcType="VARCHAR" />
    <result column="license_photo_id" property="licensePhotoId" jdbcType="VARCHAR" />
    <result column="driver_type" property="driverType" jdbcType="VARCHAR" />
    <result column="get_driver_license_date" property="getDriverLicenseDate" jdbcType="INTEGER" />
    <result column="driver_license_on" property="driverLicenseOn" jdbcType="INTEGER" />
    <result column="driver_license_off" property="driverLicenseOff" jdbcType="INTEGER" />
    <result column="taxi_driver" property="taxiDriver" jdbcType="INTEGER" />
    <result column="certificate_no" property="certificateNo" jdbcType="VARCHAR" />
    <result column="network_car_issue_organization" property="networkCarIssueOrganization" jdbcType="VARCHAR" />
    <result column="network_car_issue_date" property="networkCarIssueDate" jdbcType="INTEGER" />
    <result column="get_network_car_proof_date" property="getNetworkCarProofDate" jdbcType="INTEGER" />
    <result column="network_car_proof_on" property="networkCarProofOn" jdbcType="INTEGER" />
    <result column="network_car_proof_off" property="networkCarProofOff" jdbcType="INTEGER" />
    <result column="register_date" property="registerDate" jdbcType="INTEGER" />
    <result column="fullTime_driver" property="fulltimeDriver" jdbcType="INTEGER" />
    <result column="in_driver_blacklist" property="inDriverBlacklist" jdbcType="INTEGER" />
    <result column="commercial_type" property="commercialType" jdbcType="INTEGER" />
    <result column="contract_company" property="contractCompany" jdbcType="VARCHAR" />
    <result column="contract_on" property="contractOn" jdbcType="INTEGER" />
    <result column="contract_off" property="contractOff" jdbcType="INTEGER" />
    <result column="emergency_contact" property="emergencyContact" jdbcType="VARCHAR" />
    <result column="emergency_contact_phone" property="emergencyContactPhone" jdbcType="VARCHAR" />
    <result column="emergency_contact_address" property="emergencyContactAddress" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, company_id, address, driver_name, driver_phone, driver_gender, driver_birthday, 
    driver_nationality, driver_nation, driver_marital_status, driver_language_level, 
    driver_education, driver_census, driver_address, driver_contact_address, photo_id, 
    license_id, license_photo_id, driver_type, get_driver_license_date, driver_license_on, 
    driver_license_off, taxi_driver, certificate_no, network_car_issue_organization, 
    network_car_issue_date, get_network_car_proof_date, network_car_proof_on, network_car_proof_off, 
    register_date, fullTime_driver, in_driver_blacklist, commercial_type, contract_company, 
    contract_on, contract_off, emergency_contact, emergency_contact_phone, emergency_contact_address, 
    state, flag, update_time
  </sql>

  <sql id="params">
    <if test="param.address != null">AND address = #{param.address}</if>
    <if test="param.companyId != null">AND company_id = #{param.companyId}</if>
    <if test="param.licenseId != null">AND license_id = #{param.licenseId}</if>
    <if test="param.driverPhone != null">AND driver_phone = #{param.driverPhone}</if>
    <if test="param.driverName != null">AND driver_name = #{param.driverName}</if>
    <if test="param.state != null">AND state = #{param.state}</if>
  </sql>

  <select id="select" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from driver_info
    <where>
      <include refid="params" />
    </where>
    ORDER BY
    ${pager.sort} ${pager.order}
    LIMIT
    #{pager.offset}, #{pager.limit}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from driver_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from driver_info
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByExample"  >
    delete from driver_info
    <where>
      <include refid="params" />
    </where>
  </delete>

  <select id="count"  resultType="java.lang.Integer" >
    select count(*) from driver_info
    <where>
      <include refid="params" />
    </where>
  </select>

</mapper>